{"version":3,"sources":["MainNav.js","MenuNav.js","components/common/EnhancedTable.js","components/common/ResourceViewer.js","components/common/utils.js","components/resources/FileUploader.js","components/resources/NoResourcesCard.js","components/common/dataStruct.js","components/resources/Resources.js","components/settings/styles.js","components/settings/Links.js","components/settings/General.js","components/settings/NetworkingAndTransport.js","components/settings/NAT.js","components/settings/DangerZone.js","components/settings/DataAccess.js","components/settings/RestService.js","components/settings/Certificates.js","components/settings/AccessControlLists.js","components/settings/SettingsBreadcrumbs.js","components/settings/Settings.js","components/logs/Logs.js","components/common/NotificationBar.js","components/common/PaginationTable.js","components/common/About.js","ClippedDrawer.js","App.js","registerServiceWorker.js","stores/app.js","stores/api.js","index.js"],"names":["MenuAppBar","React","Component","state","auth","anchorEl","handleChange","event","checked","this","setState","handleMenu","currentTarget","handleClose","render","props","classes","appStore","open","Boolean","AppBar","position","color","Toolbar","src","className","alt","flex","IconButton","aria-owns","aria-haspopup","onClick","Menu","id","anchorOrigin","vertical","horizontal","transformOrigin","onClose","MenuItem","setCurrentSection","setAboutDialogOpen","inject","withStyles","root","flexGrow","menuButton","marginLeft","marginRight","githubButton","bordeR","observer","MenuNav","apiStore","handleChangeSection","e","section","isResourceSection","isLocOrRegSection","loadResources","isSettingsSection","loadConfig","ListItem","button","ListItemIcon","ListItemText","primary","Divider","window","theme","width","maxWidth","backgroundColor","palette","background","paper","desc","a","b","orderBy","EnhancedTableHead","createSortHandler","property","onRequestSort","onSelectAllClick","order","numSelected","rowCount","columnData","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","onChange","map","column","key","disablePadding","sortDirection","pos","Tooltip","title","placement","numeric","enterDelay","TableSortLabel","active","direction","label","EnhancedTableToolbar","name","handleDeleteItems","clsx","highlight","Typography","variant","spacer","actions","aria-label","setFileUploaderOpen","paddingRight","spacing","type","secondary","main","lighten","light","text","dark","EnhancedTable","constructor","context","super","handleRequestSort","handleSelectAllClick","selected","data","n","c1","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","target","value","isSelected","showResourceEditor","resource","setCurrentResource","setResourceEditorOpen","delete","getCurrentSection","nextProps","prevState","emptyRows","Math","min","Paper","tableWrapper","Table","table","aria-labelledby","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","hover","role","aria-checked","tabIndex","c2","cursor","component","scope","c3","c4","c5","c6","c7","style","height","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","marginTop","minWidth","overflowX","DialogTitle","borderBottom","divider","margin","closeButton","right","top","grey","children","disableTypography","DialogContent","MuiDialogContent","DialogActions","borderTop","MuiDialogActions","ResourceViewer","handleTabsChange","tab","resourceYaml","Y2J","stringify","JSON","parse","resourceJson","c","J2Y","handleChangeJson","newValue","jsonEditorAnnotations","refs","jsonEditor","editor","getSession","getAnnotations","handleChangeYaml","yamlEditorAnnotations","yamlEditor","saveResource","update","notify","UNSAFE_componentWillUpdate","getCurrentResource","metadata","ref","Dialog","isResourceEditorOpen","Tabs","Tab","mode","showGutter","editorProps","$blockScrolling","Button","size","disableElevation","appBar","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","toLowerCase","getParameterByName","url","location","href","results","RegExp","exec","decodeURIComponent","getEndpoint","apiURL","filter","token","endpoint","hasValue","field","isValidIp","ipv4","isValid","isValidPort","isNaN","isValidPath","isValidTimeout","isValidThreadNumber","isValidSubnets","s","subnets","toString","split","subnet","isSubnet","isValidDSParameter","dsParameter","parameter","FileUploader","oldCnt","eventHandlers","success","file","sending","resources","error","componentConfig","iconFiletypes","showFiletypeIcon","postUrl","getAPIUrl","getToken","isFileUploaderOpen","djsConfig","addRemoveLinks","config","input","display","card","marginBottom","fontSize","Card","justify","CardContent","secondaryHeading","CardActions","columnDataDomains","domainsStruct","item","spec","domainUri","moment","modifiedOn","fromNow","columnDataAgents","columnDataPeers","columnDataGateways","columnDataNumbers","columnDataLocation","columnDataRegistration","getColumnData","createData","credentials","username","peersStruct","host","gatewaysStruct","geoInfo","city","country","telUrl","aorLink","numbersStruct","addressOfRecord","contactInfo","locationStruct","console","log","user","ip","regOnFormatted","registrationStruct","Resources","hasData","getResources","getTitle","Fade","in","hide","handleAddItem","fileUploaderOpen","styles","heading","typography","pxToRem","flexBasis","flexShrink","textField","bcLink","textDecoration","link2","link","icon","onChangeSection","preventDefault","Link","onSave","onCancel","TextField","multiline","rowsMax","userAgent","placeholder","bindAddr","transportPorts","udp","inputProps","maxLength","tcp","tls","ws","wss","disabled","externAddr","rows","localnets","FormControl","InputLabel","Select","registrarIntf","labelWidth","FormControlLabel","control","recordRoute","rel","options","useState","setOpen","openDialog","setOpenDialog","action","setAction","confirm","setConfirm","setSelectedIndex","anchorRef","useRef","onRestartServerNow","onStopServerNow","onRestartServer","onStopServer","handleCloseDialog","current","contains","redTheme","createMuiTheme","ButtonGroup","aria-controls","undefined","aria-expanded","prevOpen","Popper","transition","disablePortal","TransitionProps","Grow","ClickAwayListener","onClickAway","MenuList","option","handleMenuItemClick","DialogContentText","autoFocus","fullWidth","formControl","labelId","dsProvider","dsParameters","restBindAddr","restPort","restMinThreads","restMaxThreads","restTimeOutMillis","restKeyStorePath","restTrustStorePath","restKeyStorePassword","restTrustStorePassword","restUnsecured","scClientAuthType","scKeyStoreType","scKeyStorePath","scTrustStorePath","scKeyStorePassword","scTrustStorePassword","scSSLv3","scTLSv1","scTLSv11","scTLSv12","scDebugging","aclDeny","aclAllow","currentSection","Breadcrumbs","home","general","networking_and_transport","nat","certificates","access_control_lists","rest_service","data_access","danger_zone","Settings","handleSave","hasList","list","dataSource","hasACL","accessControlList","deny","allow","provider","parameters","restService","keyStore","trustStore","keyStorePassword","trustStorePassword","unsecured","securityContext","debugging","client","authType","keyStoreType","port","parseInt","minThreads","maxThreads","timeOutMillis","tlsProtocols","push","protocols","transport","protocol","saveConfig","handleOnCancel","updated","isSection","handleRestartServerNow","changeStatus","handleRestartServer","handleStopServerNow","handleStopServer","componentDidUpdate","getConfig","join","forEach","p","RestService","Certificates","Logging","sock","reConnect","alignItems","startIcon","close","download","getSystemLogs","startFollowing","follow","onScroll","enableSearch","getSystemLogsURL","websocket","websocketOptions","onOpen","send","message","formatMessage","NotificationBar","setNotificationOpen","Snackbar","isNotificationOpen","autoHideDuration","ContentProps","notificationMsg","PaginationTableToolbar","handleRefresh","About","isAboutDialogOpen","ClippedDrawer","MainNav","Drawer","drawerPaper","toolbar","content","PaginationTable","isLogsSection","Logs","zIndex","overflow","drawer","default","mixins","useNextVariants","contrastText","App","componentDidMount","setToken","setApiURL","setApiHost","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","AppStore","currentResource","resourceEditorOpen","aboutDialogOpen","notificationOpen","msg","time","decorate","observable","APIStore","apiHost","doesNotSupportWOOps","rObj","t","fetch","method","body","json","response","status","ep","i","stream","now","when","process","setTimeout","stores","ReactDOM","document","getElementById","URL","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3ecf468f.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport AccountCircle from '@material-ui/icons/AccountCircle'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Menu from '@material-ui/core/Menu'\nimport { observer, inject } from 'mobx-react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  flex: {\n    flex: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  githubButton: {\n    bordeR: 0,\n    color: 'red'\n  }\n}\n\nclass MenuAppBar extends React.Component {\n  state = {\n    auth: true,\n    anchorEl: null,\n  }\n\n  handleChange = (event, checked) => {\n    this.setState({ auth: checked })\n  }\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  render() {\n    const { classes, appStore } = this.props\n    const { auth, anchorEl } = this.state\n    const open = Boolean(anchorEl)\n\n    return (\n      <div>\n        <AppBar position=\"static\" color=\"primary\">\n          <Toolbar>\n            <img src=\"/images/logo.png\" className=\"App-logo\" alt=\"logo\" />\n            <span className={classes.flex}/>\n            {auth && (\n              <div>\n                <IconButton\n                  aria-owns={open ? 'menu-appbar' : null}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  <AccountCircle />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={open}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={() => {\n                      appStore.setCurrentSection('settings')\n                      this.handleClose()}\n                  }>Settings</MenuItem>\n                  <MenuItem onClick={() => {\n                      appStore.setAboutDialogOpen()\n                      this.handleClose()}\n                  }>About</MenuItem>\n                </Menu>\n              </div>\n            )}\n          </Toolbar>\n        </AppBar>\n      </div>\n    )\n  }\n}\n\nMenuAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default inject('appStore')(withStyles(styles)(observer(MenuAppBar)))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport DomainsIcon from '@material-ui/icons/Business'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport GatewaysIcon from '@material-ui/icons/SwapHoriz'\nimport AgentsIcon from '@material-ui/icons/People'\nimport LogsIcon from '@material-ui/icons/Assignment'\nimport DialpadIcon from '@material-ui/icons/Dialpad'\nimport PeersAgent from '@material-ui/icons/GroupWork'\nimport LocationSearching from '@material-ui/icons/LocationSearching'\nimport DoneIcon from '@material-ui/icons/Done'\nimport HelpIcon from '@material-ui/icons/HelpOutline'\nimport { observer, inject } from 'mobx-react'\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n})\n\nclass MenuNav extends React.Component {\n\n    render() {\n      const { classes, apiStore, appStore} = this.props\n      const handleChangeSection = (e, section) => {\n          appStore.setCurrentSection(section)\n          if (appStore.isResourceSection() || appStore.isLocOrRegSection()) {\n              apiStore.loadResources(section)\n          } else if(appStore.isSettingsSection()) {\n              apiStore.loadConfig()\n          }\n      }\n\n      return (\n        <div className={classes.root}>\n            <ListItem button onClick={e => handleChangeSection(e, 'domains')}>\n              <ListItemIcon>\n                <DomainsIcon/>\n              </ListItemIcon>\n              <ListItemText primary=\"Domains\"/>\n            </ListItem>\n            <ListItem button onClick={e => handleChangeSection(e, 'agents')}>\n              <ListItemIcon>\n                <AgentsIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Agents\" />\n            </ListItem>\n            <ListItem button onClick={e => handleChangeSection(e, 'peers')}>\n              <ListItemIcon>\n                <PeersAgent />\n              </ListItemIcon>\n              <ListItemText primary=\"Peers\" />\n            </ListItem>\n            <ListItem button onClick={e => handleChangeSection(e, 'gateways')}>\n              <ListItemIcon>\n                <GatewaysIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Gateways\" />\n            </ListItem>\n            <ListItem button onClick={e => handleChangeSection(e, 'numbers')}>\n              <ListItemIcon>\n                <DialpadIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Numbers\" />\n            </ListItem>\n            <ListItem button onClick={e => handleChangeSection(e, 'location')}>\n              <ListItemIcon>\n                <LocationSearching />\n              </ListItemIcon>\n              <ListItemText primary=\"Location\" />\n            </ListItem>\n            <ListItem button onClick={e => handleChangeSection(e, 'registration')}>\n              <ListItemIcon>\n                <DoneIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Registration\" />\n            </ListItem>\n            <Divider />\n            <ListItem button onClick={e => handleChangeSection(e, 'settings')}>\n              <ListItemIcon>\n                <SettingsIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Settings\" />\n            </ListItem>\n            <ListItem button onClick={e => handleChangeSection(e, 'logs')}>\n              <ListItemIcon>\n                <LogsIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Logs\" />\n            </ListItem>\n            <ListItem button onClick={e => window.open('https://github.com/fonoster/routr/issues', '_blank')}>\n              <ListItemIcon>\n                <HelpIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Help\" />\n            </ListItem >\n        </div>)\n    }\n}\n\nMenuNav.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default inject('apiStore')(inject('appStore')(withStyles(styles)(observer(MenuNav))))\n","import React from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddItemIcom from '@material-ui/icons/Add'\nimport { lighten } from '@material-ui/core/styles/colorManipulator'\nimport { observer, inject } from 'mobx-react'\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n      this.props.onRequestSort(event, property)\n  }\n\n  render() {\n    const { onSelectAllClick, order, orderBy, numSelected, rowCount, columnData } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={numSelected === rowCount}\n              onChange={onSelectAllClick}\n            />\n          </TableCell>\n          {columnData.map(column => {\n            return (\n              <TableCell\n                key={column.id}\n                padding={column.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === column.pos ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={column.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === column.pos}\n                    direction={order}\n                    onClick={this.createSortHandler(column.pos)}\n                  >\n                    {column.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            )\n          }, this)}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n}\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n})\n\nlet EnhancedTableToolbar = props => {\n  const { numSelected, classes, name, handleDeleteItems } = props\n\n  return (\n\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            {name}\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n\n          <Tooltip title=\"Delete\">\n            <IconButton aria-label=\"Delete\" onClick={handleDeleteItems}>\n              <DeleteIcon/>\n            </IconButton>\n          </Tooltip>\n        ) : (\n          <Tooltip title=\"Add\">\n            <IconButton aria-label=\"Add\" onClick={ props.appStore.setFileUploaderOpen } >\n              <AddItemIcom />\n            </IconButton>\n          </Tooltip>\n        )}\n      </div>\n    </Toolbar>\n  )\n}\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n}\n\nEnhancedTableToolbar = inject('appStore')(withStyles(toolbarStyles)(observer(EnhancedTableToolbar)))\n\nconst styles = theme => ({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n    },\n    table: {\n      minWidth: 1020,\n    },\n    tableWrapper: {\n      overflowX: 'auto',\n    },\n    cursor: {\n      cursor: 'pointer',\n    }\n})\n\nclass EnhancedTable extends React.Component {\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n        order: 'asc',\n        orderBy: '',\n        selected: [],\n        data: props.data,\n        page: 0,\n        rowsPerPage: 5,\n    }\n  }\n\n  handleRequestSort = (event, property) => {\n      const orderBy = property;\n      let order = 'desc';\n\n      if (this.state.orderBy === property && this.state.order === 'desc') {\n        order = 'asc';\n      }\n\n      this.setState({ order, orderBy });\n  }\n\n  handleSelectAllClick = (event, checked) => {\n      if(checked) {\n        this.setState({ selected: this.state.data.map(n => n.c1) })\n      } else {\n        this.setState({ selected: [] })\n      }\n  }\n\n  handleClick = (event, id) => {\n      const { selected } = this.state\n      const selectedIndex = selected.indexOf(id)\n      let newSelected = []\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id)\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1))\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1))\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(\n          selected.slice(0, selectedIndex),\n          selected.slice(selectedIndex + 1),\n        )\n      }\n\n      this.setState({ selected: newSelected })\n  }\n\n  handleChangePage = (event, page) => this.setState({ page })\n\n  handleChangeRowsPerPage = event => this.setState({ rowsPerPage: event.target.value })\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1\n\n  showResourceEditor = resource => {\n      this.props.appStore.setCurrentResource(resource)\n      this.props.appStore.setResourceEditorOpen()\n  }\n\n  handleDeleteItems = selected => this.props.apiStore.delete(\n    this.props.appStore.getCurrentSection(), selected)\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if(nextProps.data!==prevState.data){\n       return { data: nextProps.data, selected: []};\n    }\n    else return null;\n  }\n\n  render() {\n    const { classes, columnData, name, data } = this.props\n    const { order, orderBy, selected, rowsPerPage, page} = this.state\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage)\n\n    return (\n      <Paper className={classes.root}>\n        <EnhancedTableToolbar name={ name }\n            numSelected={selected.length} handleDeleteItems={ e => {\n                this.handleDeleteItems(selected)\n                this.setState({selected: []})\n              }}/>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              columnData={ columnData }\n              numSelected={ selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n            />\n            <TableBody>\n              { stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n                const isSelected = this.isSelected(n.c1)\n                return (\n                  <TableRow\n                    hover\n                    role=\"checkbox\"\n                    aria-checked={isSelected}\n                    tabIndex={-1}\n                    key={n.c1}\n                    selected={isSelected}\n                  >\n                    <TableCell padding=\"checkbox\"\n                      onClick={ e => this.handleClick(e, n.c1)}>\n                      <Checkbox checked={isSelected} />\n                    </TableCell>\n                    <TableCell onClick={ e => this.showResourceEditor(n.c2) } className={classes.cursor} component=\"th\" scope=\"row\" padding=\"none\">\n                      {n.c3}\n                    </TableCell>\n                    <TableCell onClick={ e => this.showResourceEditor(n.c2) } className={classes.cursor}>{n.c4}</TableCell>\n                    {n.c5 && <TableCell onClick={ e => this.showResourceEditor(n.c2) } className={classes.cursor}>{n.c5}</TableCell>}\n                    {n.c6 && <TableCell onClick={ e => this.showResourceEditor(n.c2) } className={classes.cursor}>{n.c6}</TableCell>}\n                    {n.c7 && <TableCell onClick={ e => this.showResourceEditor(n.c2) } className={classes.cursor}>{n.c7}</TableCell>}\n                    <TableCell onClick={ e => this.showResourceEditor(n.c2) } className={classes.cursor}>{n.c1}</TableCell>\n                  </TableRow>\n                )\n              })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    )\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default inject('apiStore')(inject('appStore')(withStyles(styles)(observer(EnhancedTable))))\n","import React from 'react'\nimport AceEditor from 'react-ace'\nimport 'ace-builds/webpack-resolver'\n// then the mode, theme & extension\nimport 'ace-builds/src-noconflict/mode-json'\nimport 'ace-builds/src-noconflict/mode-yaml'\nimport 'ace-builds/src-noconflict/theme-textmate'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport Y2J from 'json2yaml'\nimport J2Y from 'yamljs'\nimport Button from '@material-ui/core/Button'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport MuiDialogContent from '@material-ui/core/DialogContent'\nimport MuiDialogActions from '@material-ui/core/DialogActions'\nimport { observer, inject } from 'mobx-react'\n\nconst styles = {\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n}\n\nconst DialogTitle = withStyles(theme => ({\n  root: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))(props => {\n  const { children, classes, onClose } = props\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  )\n})\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: 0\n  },\n}))(MuiDialogContent)\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions)\n\nclass ResourceViewer extends React.Component {\n\n  constructor(props) {\n      super(props)\n      this.state = {\n          tab: 0\n      }\n  }\n\n  UNSAFE_componentWillUpdate() {\n      const resource = JSON.parse(this.props.appStore.getCurrentResource())\n      if (!this.state.resource\n          || this.state.resource.metadata.ref !== resource.metadata.ref){\n          const resourceJson = JSON.stringify(resource, null, \"\\t\")\n          const resourceYaml = Y2J.stringify(resource)\n          this.setState({resource, resourceJson, resourceYaml })\n      }\n  }\n\n  handleTabsChange = (event, tab) => {\n      this.setState({ tab })\n      if (tab === 0) {\n          this.setState({ resourceYaml: Y2J.stringify(JSON.parse(this.state.resourceJson)) })\n      } else {\n          const c = JSON.stringify(J2Y.parse(this.state.resourceYaml), null, \"\\t\")\n          this.setState({ resourceJson: c})\n      }\n  }\n\n  handleChangeJson = newValue => {\n      this.setState({ resourceJson: newValue })\n      this.setState({ jsonEditorAnnotations: this.refs.jsonEditor.editor.getSession().getAnnotations() })\n  }\n\n  handleChangeYaml = newValue => {\n      this.setState({ resourceYaml: newValue})\n      this.setState({yamlEditorAnnotations: this.refs.yamlEditor.editor.getSession().getAnnotations()})\n  }\n\n  saveResource = () => {\n      try {\n          const resource = this.state.tab === 1\n            ? this.state.resourceJson\n            : JSON.stringify(J2Y.parse(this.state.resourceYaml))\n\n          this.props.apiStore.update(resource)\n          this.props.appStore.setResourceEditorOpen()\n          this.setState({resource: void(0)})\n      } catch(e) {\n          this.props.appStore.notify('Malformed document.')\n      }\n  }\n\n  render() {\n    const { tab } = this.state\n\n    return (\n      <div>\n        <Dialog\n          aria-labelledby=\"customized-dialog-title\"\n          onClose={ this.props.appStore.setResourceEditorOpen }\n          open={ this.props.appStore.isResourceEditorOpen() }\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={ this.props.appStore.setResourceEditorOpen }>\n            Edit a resource\n          </DialogTitle>\n          <Tabs onChange={this.handleTabsChange} value={tab}>\n            <Tab label=\"YAML\"/>\n            <Tab label=\"JSON\"/>\n          </Tabs>\n          <DialogContent>\n            {tab === 0 &&\n              <AceEditor\n                ref=\"yamlEditor\"\n                mode=\"yaml\"\n                theme=\"textmate\"\n                showGutter={ true }\n                value={ this.state.resourceYaml }\n                onChange={ this.handleChangeYaml }\n                editorProps={{$blockScrolling: true}}\n              />\n            }\n            {tab === 1 &&\n              <AceEditor\n                ref=\"jsonEditor\"\n                mode=\"json\"\n                theme=\"textmate\"\n                showGutter={ true }\n                value={ this.state.resourceJson }\n                onChange={ this.handleChangeJson }\n                editorProps={{$blockScrolling: false}}\n              />\n            }\n          </DialogContent>\n          <DialogActions>\n            <Button size=\"small\" variant=\"contained\" disableElevation color=\"secondary\" onClick={this.saveResource}>\n              Save\n            </Button>\n            <Button size=\"small\" variant=\"contained\" disableElevation onClick={this.props.appStore.setResourceEditorOpen}>\n              Cancel\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nResourceViewer.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default inject('apiStore')(inject('appStore')(withStyles(styles)(observer(ResourceViewer))))\n","import { ipv4 } from 'ip-address-utils'\nimport isValid from 'is-valid-path'\n\nexport function toTitleCase(str) {\n    return str.replace(\n        /\\w\\S*/g,\n        function(txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        }\n    );\n}\n\nexport function getParameterByName(name, url) {\n    if (!url) url = window.location.href;\n    name = name.replace(/[[]]/g, \"\\\\$&\");\n    var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport function getEndpoint (apiURL, resource, filter, token) {\n    let endpoint = `${apiURL}/${resource}`\n\n    if (filter) {\n        endpoint = `${endpoint}?filter=${filter}`\n    }\n\n    if (token) {\n        endpoint = filter ? `${endpoint}&token=${token}` : `${endpoint}?token=${token}`\n    }\n\n    return endpoint\n}\n\nexport const hasValue = field => field && field.length > 0\n\nexport const isValidIp = field => !hasValue(field) || ipv4.isValid(field)\n\nexport const isValidPort = field => !hasValue(field) || !isNaN(field)\n\nexport const isValidPath = field => !hasValue(field) || isValid(field)\n\nexport const isValidTimeout = field => !hasValue(field) || !isNaN(field)\n\n// TODO: Considered the maximum allowed thread number\nexport const isValidThreadNumber = field => !hasValue(field) || !isNaN(field)\n\nexport const isValidSubnets = s => {\n    if (!hasValue(s)) return true\n    const subnets = s.toString().split('\\n')\n    return subnets.filter(subnet => ipv4.isSubnet(subnet)).length\n      === subnets.length\n}\n\nexport const isValidDSParameter = dsParameter => {\n    if (!hasValue(dsParameter)) return true\n    const parameters = dsParameter.split(',')\n    return parameters.filter(parameter =>\n      parameter.split('=').length === 1 ||\n      parameter.split('=')[1].length === 0 ||\n      !isNaN(parameter.split('=')[0])).length === 0\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Dialog from '@material-ui/core/Dialog'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DropzoneComponent from 'react-dropzone-component'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport MuiDialogContent from '@material-ui/core/DialogContent'\nimport { withStyles } from '@material-ui/core/styles'\nimport { observer, inject } from 'mobx-react'\nimport { getEndpoint } from '../common/utils'\n\nconst styles = {\n    appBar: {\n      position: 'relative',\n    },\n    flex: {\n      flex: 1,\n    }\n}\n\nconst DialogTitle = withStyles(theme => ({\n  root: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))(props => {\n  const { children, classes, onClose } = props\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  )\n})\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: 0\n  },\n}))(MuiDialogContent)\n\nclass FileUploader extends React.Component {\n  state = {\n    oldCnt: 0\n  }\n\n  render() {\n    const { apiStore, appStore } = this.props\n\n    const eventHandlers = { success: file => {\n            apiStore.loadResources(appStore.getCurrentSection())\n            appStore.setFileUploaderOpen()\n            appStore.notify(`Resources added.`)\n        },\n        sending: () => this.setState({oldCnt: apiStore.resources.length}),\n        error: e => {\n            appStore.notify('An error occurred while adding resources.')\n        }\n    }\n    const djsConfig = { addRemoveLinks: true }\n    const endpoint = getEndpoint(\n        apiStore.getAPIUrl(),\n        appStore.getCurrentSection(),\n        '',\n        apiStore.getToken()\n    )\n    const componentConfig = {\n        iconFiletypes: ['.yaml', '.yml'],\n        showFiletypeIcon: true,\n        postUrl: endpoint\n    }\n\n    return (\n      <div>\n          <Dialog\n            aria-labelledby=\"customized-dialog-title\"\n            open={ this.props.appStore.isFileUploaderOpen() }\n            onClose={ this.props.appStore.setFileUploaderOpen }\n          >\n            <DialogTitle id=\"customized-dialog-title\" onClose={ this.props.appStore.setFileUploaderOpen }>\n              Submit Resource File\n            </DialogTitle>\n            <DialogContent style={{padding: 10}}>\n              <DropzoneComponent eventHandlers={eventHandlers} djsConfig={djsConfig} config={componentConfig} />\n            </DialogContent>\n          </Dialog>\n      </div>\n    )\n  }\n}\n\nFileUploader.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default inject('apiStore')(inject('appStore')(withStyles(styles)(observer(FileUploader))))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { observer, inject } from 'mobx-react'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n  card: {\n    maxWidth: 300,\n    position: 'relative',\n    margin: '10% auto',\n    padding: 8\n  },\n  title: {\n    marginBottom: 16,\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n})\n\nfunction NoResourcesCard(props) {\n  const { classes, resource } = props\n\n  return (\n    <div>\n      <Card justify={'center'} className={classes.card}>\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\">\n            No resources found\n          </Typography>\n          <Typography component=\"h2\">\n              {resource}\n          </Typography>\n          <Typography className={classes.pos} color=\"textSecondary\">\n            resource\n          </Typography>\n          <Typography className={classes.secondaryHeading}>\n            At this time not resources found on the {resource.toLowerCase()} section. Go to the\n            documentation to learn more about resources <a href=\"https://routr.io/docs\"><LaunchIcon style={{ color: '#3F51B5', fontSize: 18 }}></LaunchIcon></a>\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button className={classes.button} variant=\"contained\" onClick={props.appStore.setFileUploaderOpen }\n            color=\"secondary\" size=\"small\" disableElevation>Add {resource}\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nNoResourcesCard.propTypes = {\n    classes: PropTypes.object.isRequired\n}\n\nexport default inject('appStore')(withStyles(styles)(observer(NoResourcesCard)))\n","import moment from 'moment'\n\nexport const columnDataDomains = [\n    { id: 'name', numeric: false, disablePadding: true, label: 'Domain Name', pos: 'c1' },\n    { id: 'uri', numeric: false, disablePadding: false, label: 'URI', pos: 'c2' },\n    { id: 'modified', numeric: false, disablePadding: false, label: 'Modified', pos: 'c3' },\n    { id: 'ref', numeric: false, disablePadding: false, label: 'Ref', pos: 'c4' },\n]\n\nexport function domainsStruct(item) {\n    return {\n        c1: item.metadata.ref,\n        c2: JSON.stringify(item),\n        c3: item.metadata.name,\n        c4: item.spec.context.domainUri,\n        c5: moment(item.metadata.modifiedOn).fromNow()\n    }\n}\n\nexport const columnDataAgents = [\n    { id: 'name', numeric: false, disablePadding: true, label: 'Agent Name', pos: 'c1' },\n    { id: 'username', numeric: false, disablePadding: false, label: 'Username', pos: 'c2' },\n    { id: 'modified', numeric: false, disablePadding: false, label: 'Modified', pos: 'c3'},\n    { id: 'ref', numeric: false, disablePadding: false, label: 'Ref', pos: 'c4' },\n]\n\nexport function agentsStruct(item) {\n    return {\n        c1: item.metadata.ref,\n        c2: JSON.stringify(item),\n        c3: item.metadata.name,\n        c4: item.spec.credentials.username,\n        c5: moment(item.metadata.modifiedOn).fromNow()\n    }\n}\n\nexport const columnDataPeers = [\n    { id: 'name', numeric: false, disablePadding: true, label: 'Peer Name', pos: 'c1' },\n    { id: 'username', numeric: false, disablePadding: false, label: 'Username', pos: 'c2' },\n    { id: 'modified', numeric: false, disablePadding: false, label: 'Modified', pos: 'c3' },\n    { id: 'ref', numeric: false, disablePadding: false, label: 'Ref', pos: 'c4' },\n]\n\nexport function peersStruct(item) {\n    return {\n        c1: item.metadata.ref,\n        c2: JSON.stringify(item),\n        c3: item.metadata.name,\n        c4: item.spec.credentials.username,\n        c5: moment(item.metadata.modifiedOn).fromNow()\n    }\n}\n\nexport const columnDataGateways = [\n    { id: 'name', numeric: false, disablePadding: true, label: 'Gateway', pos: 'c1' },\n    { id: 'username', numeric: false, disablePadding: false, label: 'Username', pos: 'c2' },\n    { id: 'host', numeric: false, disablePadding: false, label: 'Host', pos: 'c3' },\n    { id: 'modified', numeric: false, disablePadding: false, label: 'Modified', pos: 'c4' },\n    { id: 'ref', numeric: false, disablePadding: false, label: 'Ref', pos: 'c5' },\n]\n\nexport function gatewaysStruct(item) {\n    return {\n        c1: item.metadata.ref,\n        c2: JSON.stringify(item),\n        c3: item.metadata.name,\n        c4: !item.spec.credentials || !item.spec.credentials.username\n          ? 'None' : item.spec.credentials.username ,\n        c5: item.spec.host,\n        c6: moment(item.metadata.modifiedOn).fromNow()\n    }\n}\n\nexport const columnDataNumbers = [\n    { id: 'number', numeric: false, disablePadding: true, label: 'Number', pos: 'c1' },\n    { id: 'location', numeric: false, disablePadding: false, label: 'Location', pos: 'c2' },\n    { id: 'aorLink', numeric: false, disablePadding: false, label: 'AOR Link', pos: 'c3' },\n    { id: 'modified', numeric: false, disablePadding: false, label: 'Modified', pos: 'c4' },\n    { id: 'ref', numeric: false, disablePadding: false, label: 'Ref', pos: 'c5' },\n]\n\nexport function numbersStruct(item) {\n    let location = ''\n    if(item.metadata.geoInfo) {\n     location = item.metadata.geoInfo.city + ', '\n      + item.metadata.geoInfo.country\n    }\n\n    return {\n        c1: item.metadata.ref,\n        c2: JSON.stringify(item),\n        c3: item.spec.location.telUrl,\n        c4: location,\n        c5: item.spec.location.aorLink,\n        c6: moment(item.metadata.modifiedOn).fromNow()\n    }\n}\n\nexport const columnDataLocation = [\n    { id: 'addressOfRecord', numeric: false, disablePadding: true, label: 'Address Of Record', pos: 'c1' },\n    { id: 'contactInfo', numeric: false, disablePadding: false, label: 'Contact Information', pos: 'c2' }\n]\n\nexport function locationStruct(item) {\n    return {\n        c1: item.addressOfRecord,\n        c2: item.contactInfo\n    }\n}\n\nexport const columnDataRegistration = [\n    { id: 'host', numeric: false, disablePadding: false, label: 'Host', pos: 'c1' },\n    { id: 'username', numeric: false, disablePadding: true, label: 'Username', pos: 'c2' },\n    { id: 'ipAddress', numeric: false, disablePadding: false, label: 'IP', pos: 'c3' },\n    { id: 'registered', numeric: false, disablePadding: false, label: 'Registered', pos: 'c4' }\n]\n\nexport function registrationStruct(item) {\n    console.log('item:' + JSON.stringify(item))\n    return {\n        c1: item.user,\n        c2: item.host,\n        c3: item.ip,\n        c4: item.regOnFormatted,\n    }\n}\n\nexport function getColumnData(section) {\n    switch (section) {\n      case 'domains':\n        return columnDataDomains\n      case 'agents':\n          return columnDataAgents\n      case 'peers':\n          return columnDataPeers\n      case 'gateways':\n          return columnDataGateways\n      case 'numbers':\n          return columnDataNumbers\n      case 'location':\n          return columnDataLocation\n      case 'registration':\n          return columnDataRegistration\n      default:\n        return columnDataDomains\n    }\n}\n\nexport function createData(item, section) {\n    switch (section) {\n      case 'domains':\n          return domainsStruct(item)\n      case 'agents':\n          return agentsStruct(item)\n      case 'peers':\n          return peersStruct(item)\n      case 'gateways':\n          return gatewaysStruct(item)\n      case 'numbers':\n          return numbersStruct(item)\n      case 'location':\n          return locationStruct(item)\n      case 'registration':\n          return registrationStruct(item)\n      default:\n        return domainsStruct(item)\n    }\n}\n","import React from 'react';\nimport EnhancedTable from '../common/EnhancedTable'\nimport ResourceViewer from '../common/ResourceViewer'\nimport FileUploader from './FileUploader'\nimport NoResourcesCard from './NoResourcesCard'\nimport { toTitleCase } from '../common/utils'\nimport { getColumnData } from '../common/dataStruct'\nimport { observer, inject } from 'mobx-react'\nimport Fade from '@material-ui/core/Fade'\n\nclass Resources extends React.Component {\n\n    render() {\n      const { appStore, apiStore } = this.props\n      const hasData = () => apiStore.getResources().length > 0\n      const getTitle = () => toTitleCase(appStore.getCurrentSection())\n      const columnData = getColumnData(appStore.getCurrentSection())\n      const data = apiStore.getResources()\n\n      return (\n          <div>\n            { hasData() &&\n                <Fade in={true}>\n                  <EnhancedTable  hide={ true } name={ getTitle() }\n                    columnData= { columnData }\n                    data={ data } />\n                </Fade>\n            }\n\n            { !hasData() &&\n                <Fade in={true}>\n                  <NoResourcesCard resource={getTitle()}\n                  handleAddItem={ e => this.setState({ fileUploaderOpen: true }) } />\n                </Fade>\n            }\n\n            <ResourceViewer />\n            <FileUploader/>\n          </div>\n      );\n    }\n  }\n\nexport default inject('apiStore')(inject('appStore')(observer(Resources)))\n","export const styles = theme => ({\n  heading: {\n     fontSize: theme.typography.pxToRem(15),\n     flexBasis: '33.33%',\n     flexShrink: 0,\n  },\n  secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n  },\n  textField: {\n     marginBottom: 10,\n     width: 320,\n     marginRight: 10,\n  },\n  bcLink: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n      display: 'flex',\n  },\n  link2: {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n      '&:hover': {\n        textDecoration: 'underline',\n      },\n      display: 'flex',\n  },\n  root: {\n    marginBottom: theme.spacing(2),\n  },\n  link: {\n    display: 'flex',\n    marginTop: 5\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n})\n","import React from 'react'\nimport Link from '@material-ui/core/Link'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\n\nfunction Links(props) {\n    const { onChangeSection, classes } = props\n    const handleChangeSection = (e, section) => {\n        e.preventDefault()\n        onChangeSection(section)\n    }\n\n    return (\n      <div>\n        <Link color=\"secondary\"\n          href=\"/\"\n          onClick={e => handleChangeSection(e, 'general')}\n          className={classes.link}>\n          General\n        </Link>\n        <Link color=\"secondary\"\n          onClick={e => handleChangeSection(e, 'networking_and_transport')}\n          href=\"/\" className={classes.link}>\n          Networking and Transport\n        </Link>\n        <Link color=\"secondary\"\n          onClick={e => handleChangeSection(e, 'nat')}\n          href=\"/\" className={classes.link}>\n          NAT\n        </Link>\n        <Link color=\"secondary\"\n          onClick={e => handleChangeSection(e, 'access_control_lists')}\n          href=\"/\" className={classes.link}>\n          Access Control Lists\n        </Link>\n        <Link color=\"secondary\"\n          onClick={e => handleChangeSection(e, 'data_access')}\n          href=\"/\" className={classes.link}>\n          Data Access\n        </Link>\n        <Link color=\"secondary\"\n          onClick={e => handleChangeSection(e, 'rest_service')}\n          href=\"/\" className={classes.link}>\n          Rest Service\n        </Link>\n        <Link color=\"secondary\"\n          onClick={e => handleChangeSection(e, 'certificates')}\n          href=\"/\" className={classes.link}>\n          Certificates\n        </Link>\n        <Link color=\"secondary\"\n          onClick={e => handleChangeSection(e, 'danger_zone')}\n          href=\"/\" className={classes.link}>\n          Danger Zone\n        </Link>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(Links)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\n\nfunction General(props) {\n    const {\n      onSave,\n      onCancel,\n      config,\n      onChange,\n      classes\n    } = props\n\n    return (\n      <div>\n        <Typography className={classes.secondaryHeading}>\n          Sets the SIP header User-Agent to the desired value. <br /> If\n          not value is provided, the server will use <em>`Routr $version.`</em>\n        </Typography>\n        <br />\n        <TextField\n          id=\"userAgent\"\n          label=\"User Agent\"\n          multiline\n          rowsMax=\"4\"\n          value={config.userAgent}\n          onChange={onChange}\n          className={classes.textField}\n          size=\"small\"\n          variant=\"outlined\"\n          placeholder=\"Routr v1.0\"\n        />\n        <br />\n        <br />\n        <div>\n          <Button onClick={onSave} size=\"small\"\n            variant=\"contained\" color=\"secondary\"\n            disableElevation>\n           Save\n          </Button>\n          <Button onClick={onCancel} style={{marginLeft: 5}}\n            size=\"small\" variant=\"contained\"\n            disableElevation>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(General)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\nimport { isValidIp, isValidPort } from '../common/utils'\n\nfunction NetworkingAndTransport(props) {\n    const {\n      onSave,\n      onCancel,\n      config,\n      onChange,\n      classes\n    } = props\n\n    // TODO: It should also prevent ports to repeat, unless is udp and tcp\n    const isValid = () => isValidIp(config.bindAddr)\n      && isValidPort(config.transportPorts.udp)\n      && isValidPort(config.transportPorts.tcp)\n      && isValidPort(config.transportPorts.tls)\n      && isValidPort(config.transportPorts.ws)\n      && isValidPort(config.transportPorts.wss)\n\n    return (\n      <div>\n        <Typography className={classes.secondaryHeading}>\n        This is the default IP address for the SIP stack. <br />\n        All Sip traffic will be routed through this interface.\n        </Typography>\n        <br />\n        <TextField\n          id=\"bindAddr\"\n          label=\"Bind Address\"\n          value={config.bindAddr}\n          onChange={onChange}\n          className={classes.textField}\n          error={!isValidIp(config.bindAddr)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"192.168.1.12\"\n        />\n        <br />\n        <TextField\n          id=\"udpPort\"\n          label=\"UDP Port\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.transportPorts.udp}\n          error={!isValidPort(config.transportPorts.udp)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"5060\"\n          inputProps = {{maxLength:5}}\n        />\n        <br />\n        <Typography className={classes.secondaryHeading}>\n          You can use the same port number for both TCP<br /> and UDP.\n        </Typography>\n        <br />\n        <TextField\n          id=\"tcpPort\"\n          label=\"TCP Port\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.transportPorts.tcp}\n          error={!isValidPort(config.transportPorts.tcp)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"5060\"\n          inputProps = {{maxLength:5}}\n        />\n        <br />\n        <Typography className={classes.secondaryHeading}>\n          Secure transport, like TLS and WSS, required<br />\n          a valid certificate to secure the SIP signaling.\n        </Typography>\n        <br />\n        <TextField\n          id=\"tlsPort\"\n          label=\"TLS Port\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.transportPorts.tls}\n          error={!isValidPort(config.transportPorts.tls)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"5061\"\n          inputProps = {{maxLength:5}}\n        />\n        <br />\n        <TextField\n          id=\"wsPort\"\n          label=\"WS Port\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.transportPorts.ws}\n          error={!isValidPort(config.transportPorts.ws)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"5062\"\n          inputProps = {{maxLength:5}}\n        />\n        <br />\n        <TextField\n          id=\"wssPort\"\n          label=\"WSS Port\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.transportPorts.wss}\n          error={!isValidPort(config.transportPorts.wss)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"5063\"\n          inputProps = {{maxLength:5}}\n        />\n        <br />\n        <br />\n        <div>\n          <Button disabled={!isValid()} onClick={onSave} size=\"small\"\n            variant=\"contained\" color=\"secondary\"\n            disableElevation>\n           Save\n          </Button>\n          <Button onClick={onCancel} style={{marginLeft: 5}}\n            size=\"small\" variant=\"contained\"\n            disableElevation>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(NetworkingAndTransport)\n","import React from 'react'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\nimport { isValidIp, isValidSubnets} from '../common/utils'\n\nfunction NAT(props) {\n    const {\n      onSave,\n      onCancel,\n      config,\n      onChange,\n      classes\n    } = props\n\n    const isValid = () => isValidIp(config.externAddr) &&\n        isValidSubnets(config.localnets)\n\n    return (\n      <div>\n        <Typography className={classes.secondaryHeading}>\n        The IP address to advertise. This must be used<br />\n        in combination with Localnets. If Localnets\n        is<br /> empty, the External Address will be ignored.\n        </Typography>\n        <br />\n        <TextField\n          id=\"externAddr\"\n          label=\"External Address\"\n          value={config.externAddr}\n          onChange={onChange}\n          className={classes.textField}\n          error={!isValidIp(config.externAddr)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"172.220.246.46\"\n        />\n        <br />\n        <TextField\n          id=\"localnets\"\n          label=\"Localnets\"\n          multiline\n          rowsMax=\"4\"\n          rows=\"3\"\n          value={config.localnets}\n          onChange={onChange}\n          error={!isValidSubnets(config.localnets)}\n          className={classes.textField}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"192.168.1.149/32\"\n        />\n        <br />\n        <Typography className={classes.secondaryHeading}>\n        Choosing Internal causes the server to use the<br /> IP and port\n        it \"sees\"(received & rport) from a <br /> device attempting\n        to register. You will rarely need<br /> to change this.\n        </Typography>\n        <br />\n        <FormControl size=\"small\" variant=\"outlined\" className={classes.textField}>\n            <InputLabel>\n              Registration Interface\n            </InputLabel>\n            <Select\n              value={config.registrarIntf}\n              onChange={onChange}\n              labelWidth={155}\n              size=\"small\"\n            >\n              <MenuItem id='registrarIntf' value=\"Internal\">\n                <em>Internal</em>\n              </MenuItem>\n              <MenuItem id='registrarIntf' value=\"External\">\n                  External\n              </MenuItem>\n            </Select>\n        </FormControl>\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              id=\"recordRoute\"\n              onChange={onChange}\n              checked={config.recordRoute}\n              color=\"primary\"\n              size=\"small\"\n            />\n          }\n          label=\"Record-Route\"\n        />\n        <br />\n        <Typography variant=\"caption\">\n          Check if you want server to stay within the signaling path\n          <br />\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://routr.io/docs/configuration/general/\" className={classes.link2}>\n            Learn more\n          </a>\n        </Typography>\n        <br />\n        <br />\n        <div>\n          <Button disabled={!isValid()} onClick={onSave} size=\"small\"\n            variant=\"contained\" color=\"secondary\"\n            disableElevation>\n           Save\n          </Button>\n          <Button onClick={onCancel} style={{marginLeft: 5}}\n            size=\"small\" variant=\"contained\"\n            disableElevation>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(NAT)\n","import React from 'react'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener'\nimport Grow from '@material-ui/core/Grow'\nimport Paper from '@material-ui/core/Paper'\nimport Popper from '@material-ui/core/Popper'\nimport MenuList from '@material-ui/core/MenuList'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\n\nconst options = ['Restart Server Now', 'Restart Server', 'Stop Server Now', 'Stop Server']\n\nfunction DangerZone(props) {\n  const [open, setOpen] = React.useState(false)\n  const [openDialog, setOpenDialog] = React.useState(false)\n  const [action, setAction] = React.useState('')\n  const [confirm, setConfirm] = React.useState('')\n  const [selectedIndex, setSelectedIndex] = React.useState(1)\n  const anchorRef = React.useRef(null)\n\n  const {\n    onRestartServerNow,\n    onStopServerNow,\n    onRestartServer,\n    onStopServer,\n    classes\n  } = props\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false)\n  }\n\n  const handleClick = () => {\n     setAction(options[selectedIndex].toUpperCase())\n     setOpenDialog(true)\n  }\n\n  const handleMenuItemClick = (event, index) => {\n     setSelectedIndex(index)\n     setOpen(false)\n   }\n\n  const handleToggle = () => {\n     setOpen(prevOpen => !prevOpen)\n   }\n\n  const handleClose = event => {\n     if (anchorRef.current && anchorRef.current.contains(event.target)) {\n       return\n     }\n     setOpen(false)\n   }\n\n  const redTheme = createMuiTheme({ palette: { error: { main: '#fafafa' } } })\n\n  const isConfirmed = () => action === confirm\n\n  const execAction = () => {\n    // const options = ['Restart Server Now', 'Restart Server', 'Stop Server Now', 'Stop Server']\n    // console.log('selectedIndex: ' + selectedIndex)\n    /*onRestartServerNow,\n    onStopServerNow,\n    onRestartServer,\n    onStopServer,*/\n    switch(selectedIndex) {\n      case 0:\n        onRestartServerNow()\n        break;\n      case 1:\n        onRestartServer()\n        break;\n      case 2:\n        onStopServerNow()\n        break;\n      case 3:\n        onStopServer()\n        break;\n      default:      \n        break;\n    }\n    setOpenDialog(false)\n  }\n\n  return (\n    <div>\n      <Typography className={classes.secondaryHeading}>\n      Before restarting or stopping the server be sure to check your <br/>\n      configurations. If you chose an action with \"NOW\" it will drop all <br/>\n      active calls and inmediatly restart or stop the server.\n      </Typography>\n      <br />\n      <MuiThemeProvider theme={redTheme}>\n        <ButtonGroup\n          variant=\"outlined\" color=\"secondary\" ref={anchorRef} aria-label=\"split button\">\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n          <Button\n            color=\"secondary\"\n            size=\"small\"\n            aria-controls={open ? 'split-button-menu' : undefined}\n            aria-expanded={open ? 'true' : undefined}\n            aria-label=\"select merge strategy\"\n            aria-haspopup=\"menu\"\n            onClick={handleToggle}\n          >\n            <ArrowDropDownIcon />\n          </Button>\n        </ButtonGroup>\n      </MuiThemeProvider>\n      <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n        {({ TransitionProps, placement }) => (\n          <Grow\n            {...TransitionProps}\n            style={{\n              transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n            }}\n          >\n            <Paper>\n              <ClickAwayListener onClickAway={handleClose}>\n                <MenuList id=\"split-button-menu\">\n                  {options.map((option, index) => (\n                    <MenuItem\n                      key={option}\n                      selected={index === selectedIndex}\n                      onClick={event => handleMenuItemClick(event, index)}\n                    >\n                      {option}\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </ClickAwayListener>\n            </Paper>\n          </Grow>\n        )}\n      </Popper>\n      <Dialog open={openDialog} onClose={handleCloseDialog} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Are you sure?</DialogTitle>\n        <DialogContent>\n          <DialogContentText className={classes.secondaryHeading}>\n            Last chance. A signal will be send to your Routr instance and the UI will be temporarily unresponsive.\n            Some changes can render your server inoperable. Proceed with caution!\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            onChange={e => setConfirm(e.target.value)}\n            label={`Please type ${action} to continue`}\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button disabled={!isConfirmed()} onClick={execAction} color=\"primary\">\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n\nexport default withStyles(styles)(DangerZone)\n","import React from 'react'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\nimport { isValidDSParameter} from '../common/utils'\n\nfunction DataAccess(props) {\n    const {\n      onSave,\n      onCancel,\n      config,\n      onChange,\n      classes\n    } = props\n\n    const isValid = () => isValidDSParameter(config.dsParameters)\n\n    return (\n      <div>\n        <Typography className={classes.secondaryHeading}>\n          The recommended provider for production is<br />\n          <em>redis_data_provider.</em>\n        </Typography>\n        <br />\n        <FormControl size=\"small\" variant=\"outlined\" className={classes.formControl}>\n            <InputLabel>\n              Data Source Provider\n            </InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              value={config.dsProvider}\n              onChange={onChange}\n              labelWidth={155}\n            >\n              <MenuItem id='dsProvider' value=\"files_data_provider\">\n                <em>Files Data Source</em>\n              </MenuItem>\n              <MenuItem id='dsProvider' value=\"redis_data_provider\">Redis Data Provider</MenuItem>\n            </Select>\n        </FormControl>\n        <br />\n        <br />\n        <TextField\n          id=\"dsParameters\"\n          label=\"Data Source Parameters\"\n          value={config.dsParameters}\n          onChange={onChange}\n          className={classes.textField}\n          error={!isValidDSParameter(config.dsParameters)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"host=localhost,port=6379\"\n        />\n        <br />\n        <br />\n        <div>\n          <Button disabled={!isValid()} onClick={onSave} size=\"small\"\n            variant=\"contained\" color=\"secondary\"\n            disableElevation>\n           Save\n          </Button>\n          <Button onClick={onCancel} style={{marginLeft: 5}}\n            size=\"small\" variant=\"contained\"\n            disableElevation>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(DataAccess)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\nimport {\n  isValidIp,\n  isValidPort,\n  isValidPath,\n  isValidThreadNumber,\n  isValidTimeout\n} from '../common/utils'\n\nfunction NetworkingAndTransport(props) {\n    const {\n      onSave,\n      onCancel,\n      config,\n      onChange,\n      classes\n    } = props\n\n    const isValid = () => isValidIp(config.restBindAddr)\n        && isValidPort(config.restPort)\n        && isValidThreadNumber(config.restMinThreads)\n        && isValidThreadNumber(config.restMaxThreads)\n        && isValidPath(config.restKeyStorePath)\n        && isValidPath(config.restTrustStorePath)\n        && isValidTimeout(config.restTimeOutMillis)\n\n    return (\n      <div>\n        <Typography className={classes.secondaryHeading}>\n          This is the default IP address for the Rest service. <br /> All HTTP\n          traffic will be routed through this interface.\n        </Typography>\n        <br />\n        <TextField\n          id=\"restBindAddr\"\n          label=\"Bind Address\"\n          value={config.restBindAddr}\n          onChange={onChange}\n          className={classes.textField}\n          error={!isValidIp(config.restBindAddr)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"0.0.0.0\"\n        />\n        <br />\n        <TextField\n          id=\"restPort\"\n          label=\"HTTP Port\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.restPort}\n          error={!isValidPort(config.restPort)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"4567\"\n        />\n        <br />\n        <Typography className={classes.secondaryHeading}>\n          Minimum thread allocation. Defaults to 8.\n        </Typography>\n        <br />\n        <TextField\n          id=\"restMinThreads\"\n          label=\"Minimum Threads\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.restMinThreads}\n          variant=\"outlined\"\n          size=\"small\"\n          error={!isValidThreadNumber(config.restMinThreads)}\n          placeholder=\"8\"\n        />\n        <br />\n        <Typography className={classes.secondaryHeading}>\n          Maximum thread allocation. Defaults to 200.\n        </Typography>\n        <br />\n        <TextField\n          id=\"restMaxThreads\"\n          label=\"Maximum Threads\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.restMaxThreads}\n          error={!isValidThreadNumber(config.restMaxThreads)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"200\"\n        />\n        <br />\n        <Typography className={classes.secondaryHeading}>\n          Will reject requests that last more than the timeout. <br />\n          Defaults to 5000(5 seconds.)\n        </Typography>\n        <br />\n        <TextField\n          id=\"restTimeOutMillis\"\n          label=\"Request Timeout\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.restTimeOutMillis}\n          error={!isValidTimeout(config.restTimeOutMillis) }\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"5000\"\n        />\n        <br />\n        <TextField\n          id=\"restKeyStorePath\"\n          label=\"KeyStore Path\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.restKeyStorePath}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"/etc/certificates/api-cert.jks\"\n        />\n        <br />\n        <TextField\n          id=\"restTrustStorePath\"\n          label=\"TrustStore Path\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.restTrustStorePath}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"/etc/certificates/api-cert.jks\"\n        />\n        <br />\n        <TextField\n          id=\"restKeyStorePassword\"\n          label=\"KeyStore Password\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.restKeyStorePassword}\n          variant=\"outlined\"\n          type=\"password\"\n          size=\"small\"\n        />\n        <br />\n        <TextField\n          id=\"restTrustStorePassword\"\n          label=\"TrustStore Password\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.restTrustStorePassword}\n          variant=\"outlined\"\n          type=\"password\"\n          size=\"small\"\n        />\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              id=\"restUnsecured\"\n              onChange={onChange}\n              checked={config.restUnsecured}\n              color=\"primary\"\n              size=\"small\"\n            />\n          }\n          label=\"Allow Unsecured\"\n        />\n        <br />\n        <Typography variant=\"caption\">\n          Check if you want to enable unsecured connections with<br />\n          the APIs. Not recommended in production.\n          <br />\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://routr.io/docs/configuration/general/\" className={classes.link2}>\n            Learn more\n          </a>\n        </Typography>\n        <br />\n        <br />\n        <div>\n          <Button disabled={!isValid()} onClick={onSave} size=\"small\"\n            variant=\"contained\" color=\"secondary\"\n            disableElevation>\n           Save\n          </Button>\n          <Button onClick={onCancel} style={{marginLeft: 5}}\n            size=\"small\" variant=\"contained\"\n            disableElevation>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(NetworkingAndTransport)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\nimport {\n  isValidPath\n} from '../common/utils'\n\n\nfunction NetworkingAndTransport(props) {\n    const {\n      onSave,\n      onCancel,\n      config,\n      onChange,\n      classes\n    } = props\n\n    const isValid = () => isValidPath(config.scKeyStorePath) &&\n        isValidPath(config.scTrustStorePath)\n\n    return (\n      <div>\n        <Typography className={classes.secondaryHeading}>\n          This configurations affect all your domains.\n        </Typography>\n        <br />\n        <FormControl size=\"small\" variant=\"outlined\" className={classes.textField}>\n            <InputLabel>\n              Client Authentication Type\n            </InputLabel>\n            <Select\n              value={config.scClientAuthType}\n              onChange={onChange}\n              labelWidth={190}\n              size=\"small\"\n            >\n              <MenuItem id='scClientAuthType' value=\"DisabledAll\">\n                <em>DisabledAll</em>\n              </MenuItem>\n              <MenuItem id='scClientAuthType' value=\"Disabled\">\n                  Disabled\n              </MenuItem>\n              <MenuItem id='scClientAuthType' value=\"Enabled\">\n                  Enabled\n              </MenuItem>\n              <MenuItem id='scClientAuthType' value=\"Want\">\n                  Want\n              </MenuItem>\n            </Select>\n        </FormControl>\n        <br />\n        <FormControl size=\"small\" variant=\"outlined\" className={classes.textField}>\n            <InputLabel>\n              KeyStore Type\n            </InputLabel>\n            <Select\n              value={config.scKeyStoreType}\n              onChange={onChange}\n              labelWidth={108}\n              size=\"small\"\n            >\n              <MenuItem id='scKeyStoreType' value=\"jks\">\n                <em>JKS</em>\n              </MenuItem>\n              <MenuItem id='scKeyStoreType' value=\"pkcs12\">\n                  PKCS12\n              </MenuItem>\n            </Select>\n        </FormControl>\n        <br />\n        <TextField\n          id=\"scKeyStorePath\"\n          label=\"KeyStore Path\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.scKeyStorePath}\n          error={!isValidPath(config.scKeyStorePath)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"/etc/certificates/domain-cert.jks\"\n        />\n        <br />\n        <TextField\n          id=\"scTrustStorePath\"\n          label=\"TrustStore Path\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.scTrustStorePath}\n          error={!isValidPath(config.scTrustStorePath)}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"/etc/certificates/domain-cert.jks\"\n        />\n        <br />\n        <TextField\n          id=\"scKeyStorePassword\"\n          label=\"KeyStore Password\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.scKeyStorePassword}\n          variant=\"outlined\"\n          type=\"password\"\n          size=\"small\"\n        />\n        <br />\n        <TextField\n          id=\"scTrustStorePassword\"\n          label=\"TrustStore Password\"\n          onChange={onChange}\n          className={classes.textField}\n          value={config.scTrustStorePassword}\n          variant=\"outlined\"\n          type=\"password\"\n          size=\"small\"\n        />\n        <br />\n        <Typography className={classes.secondaryHeading}>\n          TLS Support\n        </Typography>\n        <FormControlLabel\n          style={{marginLeft: 10}}\n          control={\n            <Checkbox\n              id=\"scSSLv3\"\n              onChange={onChange}\n              checked={config.scSSLv3}\n              color=\"primary\"\n              size=\"small\"\n            />\n          }\n          label=\"SSLv3\"\n        />\n        <br />\n        <FormControlLabel\n          style={{marginLeft: 10}}\n          control={\n            <Checkbox\n              id=\"scTLSv1\"\n              onChange={onChange}\n              checked={config.scTLSv1}\n              color=\"primary\"\n              size=\"small\"\n            />\n          }\n          label=\"TLSv1\"\n        />\n        <br />\n        <FormControlLabel\n          style={{marginLeft: 10}}\n          control={\n            <Checkbox\n              id=\"scTLSv11\"\n              onChange={onChange}\n              checked={config.scTLSv11}\n              color=\"primary\"\n              size=\"small\"\n            />\n          }\n          label=\"TLSv1.1\"\n        />\n        <br />\n        <FormControlLabel\n          style={{marginLeft: 10}}\n          control={\n            <Checkbox\n              id=\"scTLSv12\"\n              onChange={onChange}\n              checked={config.scTLSv12}\n              color=\"primary\"\n              size=\"small\"\n            />\n          }\n          label=\"TLSv1.2\"\n        />\n        <br />\n        <FormControlLabel\n          control={\n            <Checkbox\n              id=\"scDebugging\"\n              onChange={onChange}\n              checked={config.scDebugging}\n              color=\"primary\"\n              size=\"small\"\n            />\n          }\n          label=\"Enable Debugging\"\n        />\n        <br />\n        <Typography variant=\"caption\">\n          Check if you want to enable debugging for secured<br />\n          connections. Not recommended in production.\n          <br />\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://routr.io/docs/configuration/general/\" className={classes.link2}>\n            Learn more\n          </a>\n        </Typography>\n        <br />\n        <br />\n        <div>\n          <Button disabled={!isValid()} onClick={onSave} size=\"small\"\n            variant=\"contained\" color=\"secondary\"\n            disableElevation>\n           Save\n          </Button>\n          <Button onClick={onCancel} style={{marginLeft: 5}}\n            size=\"small\" variant=\"contained\"\n            disableElevation>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(NetworkingAndTransport)\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\nimport { isValidSubnets} from '../common/utils'\n\nfunction AccessControlLists(props) {\n    const {\n      onSave,\n      onCancel,\n      config,\n      onChange,\n      classes\n    } = props\n\n    const isValid = () => isValidSubnets(config.aclDeny) &&\n        isValidSubnets(config.aclAllow)\n\n    return (\n      <div>\n        <Typography className={classes.secondaryHeading}>\n        Denies or allows incoming traffic from the network list. <br />\n        The \"Deny Subnets\" takes precedence over the <br /> \"Allow Subnets.\"\n        </Typography>\n        <br />\n        <TextField\n          id=\"aclDeny\"\n          label=\"Deny Subnets\"\n          multiline\n          rowsMax=\"4\"\n          rows=\"3\"\n          value={config.aclDeny}\n          onChange={onChange}\n          error={!isValidSubnets(config.aclDeny)}\n          className={classes.textField}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"0.0.0.0/1\"\n        />\n        <br />\n        <TextField\n          id=\"aclAllow\"\n          label=\"Allow Subnets\"\n          multiline\n          rowsMax=\"4\"\n          rows=\"3\"\n          value={config.aclAllow}\n          onChange={onChange}\n          error={!isValidSubnets(config.aclAllow)}\n          className={classes.textField}\n          variant=\"outlined\"\n          size=\"small\"\n          placeholder=\"192.168.1.12/32\"\n        />\n        <br />\n        <br />\n        <div>\n          <Button disabled={!isValid()}onClick={onSave} size=\"small\"\n            variant=\"contained\" color=\"secondary\"\n            disableElevation>\n           Save\n          </Button>\n          <Button onClick={onCancel} style={{marginLeft: 5}}\n            size=\"small\" variant=\"contained\"\n            disableElevation>\n            Cancel\n          </Button>\n        </div>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(AccessControlLists)\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\nimport Link from '@material-ui/core/Link'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport { withStyles } from \"@material-ui/core/styles\"\nimport { styles } from './styles'\n\nfunction SettingsBreadcrumbs(props) {\n    const { onChangeSection, currentSection, classes } = props\n    const sectionsDesc = {\n        home: 'General',\n        general: 'General',\n        networking_and_transport: 'Networking and Transport',\n        nat: 'NAT',\n        certificates: 'Certificates',\n        access_control_lists: 'Access Control Lists',\n        rest_service: 'Rest Service',\n        data_access: 'Data Access',\n        danger_zone: 'Danger Zone',\n    }\n    const handleChangeSection = (e, section) => {\n        e.preventDefault()\n        onChangeSection(section)\n    }\n\n    return (\n      <div className={classes.root}>\n          <Breadcrumbs aria-label=\"breadcrumb\">\n            <Link color=\"inherit\" href=\"/\"\n              onClick={e => handleChangeSection(e, 'home')}\n              className={classes.bcLink}>\n              <SettingsIcon className={classes.icon} />\n              Settings\n            </Link>\n            {\n              currentSection !== 'home' &&\n              <Typography color=\"textPrimary\">{sectionsDesc[currentSection]}</Typography>\n            }\n          </Breadcrumbs>\n      </div>\n    )\n}\n\nexport default withStyles(styles)(SettingsBreadcrumbs)\n","import React from 'react'\nimport Links from './Links'\nimport General from './General'\nimport NetworkingAndTransport from './NetworkingAndTransport'\nimport NAT from './NAT'\nimport DangerZone from './DangerZone'\nimport DataAccess from './DataAccess'\nimport RestService from './RestService'\nimport Certificates from './Certificates'\nimport AccessControlLists from './AccessControlLists'\nimport SettingsBreadcrumbs from './SettingsBreadcrumbs'\nimport { observer, inject } from 'mobx-react'\n\nclass Settings extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            updated: false,\n            config: {},\n            currentSection: 'home',\n            userAgent: '',\n            bindAddr: '',\n            externAddr: '',\n            localnets: '',\n            transportPorts: {\n                udp: '',\n                tcp: '',\n                tls: '',\n                ws: '',\n                wss: ''\n            },\n            registrarIntf: 'Internal',\n            recordRoute: false,\n            aclDeny: '',\n            aclAllow: '',\n            dsProvider: 'files_data_provider',\n            dsParameters: '',\n            restBindAddr: '',\n            restPort: '',\n            restMinThreads: '',\n            restMaxThreads: '',\n            restTimeOutMillis: '',\n            restKeyStorePath: '',\n            restTrustStorePath: '',\n            restKeyStorePassword: '',\n            restTrustStorePassword: '',\n            scKeyStorePath: '',\n            scTrustStorePath: '',\n            scKeyStorePassword: '',\n            scTrustStorePassword: '',\n            scKeyStoreType: '',\n            scDebugging: false,\n            scClientAuthType: 'DisabledAll',\n            scSSLv3: false,\n            scTLSv1: false,\n            scTLSv11: false,\n            scTLSv12: false,\n            restUnsecured: false\n        }\n    }\n\n    componentDidUpdate(props) {\n        if (this.state.updated === true) return\n\n        let config = props.apiStore.getConfig()\n        let dsProvider = ''\n        let dsParameters = ''\n        let aclDeny = ''\n        let aclAllow = ''\n\n        config = config || {}\n        config.spec = config.spec || {}\n        config.metadata = config.metadata || {}\n        config.spec.transport = config.spec.transport || []\n        config.spec.securityContext = config.spec.securityContext || {}\n        config.spec.securityContext.client = config.spec.securityContext.client || {}\n        config.spec.securityContext.client.protocols = config.spec.securityContext.client.protocols || []\n        config.spec.restService = config.spec.restService || {}\n\n        if (config.spec.dataSource) {\n            dsProvider = config.spec.dataSource.provider\n            dsParameters = config.spec.dataSource.parameters\n        }\n\n        if (config.spec.accessControlList && config.spec.accessControlList.allow) {\n            aclAllow = config.spec.accessControlList.allow.join('\\n')\n        }\n\n        if (config.spec.accessControlList && config.spec.accessControlList.deny) {\n            aclDeny = config.spec.accessControlList.deny.join('\\n')\n        }\n\n        const transportPorts = {}\n\n        config.spec.transport.forEach(transport => {\n            transportPorts[transport.protocol] = transport.port\n        })\n\n        const scTLSv1 = config.spec.securityContext.client.protocols.filter(\n          p => p === 'TLSv1').length > 0\n        const scTLSv11 = config.spec.securityContext.client.protocols.filter(\n          p => p === 'TLSv1.1').length > 0\n        const scTLSv12 = config.spec.securityContext.client.protocols.filter(\n          p => p === 'TLSv1.2').length > 0\n        const scSSLv3 = config.spec.securityContext.client.protocols.filter(\n          p => p === 'SSLv3').length > 0\n\n        this.setState({\n            userAgent: config.metadata.userAgent,\n            bindAddr: config.spec.bindAddr,\n            externAddr: config.spec.externAddr,\n            localnets: config.spec.localnets,\n            registrarIntf: config.spec.registrarIntf,\n            recordRoute: config.spec.recordRoute,\n            restBindAddr: config.spec.restService.bindAddr,\n            restPort: config.spec.restService.port,\n            restMinThreads: config.spec.restService.minThreads,\n            restMaxThreads:config.spec.restService.maxThreads,\n            restTimeOutMillis: config.spec.restService.timeOutMillis,\n            restKeyStorePath: config.spec.restService.keyStore,\n            restTrustStorePath: config.spec.restService.trustStore,\n            restKeyStorePassword: config.spec.restService.keyStorePassword,\n            restTrustStorePassword: config.spec.restService.trustStorePassword,\n            restUnsecured: config.spec.restService.unsecured,\n            scKeyStorePath: config.spec.securityContext.keyStore,\n            scTrustStorePath: config.spec.securityContext.trustStore,\n            scKeyStorePassword: config.spec.securityContext.keyStorePassword,\n            scTrustStorePassword: config.spec.securityContext.trustStorePassword,\n            scClientAuthType: config.spec.securityContext.client.authType,\n            scKeyStoreType: config.spec.securityContext.keyStoreType,\n            scDebugging: config.spec.securityContext.debugging,\n            scTLSv1,\n            scTLSv11,\n            scTLSv12,\n            scSSLv3,\n            dsParameters,\n            dsProvider,\n            aclDeny,\n            aclAllow,\n            config,\n            updated: true,\n            transportPorts\n        })\n    }\n\n    handleSave = () => {\n        const hasList = list => list && list.length > 0\n        const hasACL = state => hasList(state.aclAllow) || hasList(state.aclDeny)\n\n        // Convert back to correct format\n        const config = this.state.config\n        const state = this.state\n\n        if (!config.spec.dataSource) config.spec.dataSource = {}\n        if (!hasACL(state)) {\n          delete config.spec.accessControlList\n        } else {\n          config.spec.accessControlList = {}\n        }\n\n        if (!config.metadata) config.metadata = {}\n\n        if (state.localnets) {\n          config.spec.localnets = state.localnets.toString().split('\\n')\n        }\n\n        if(hasList(state.aclDeny)) {\n          config.spec.accessControlList.deny = state.aclDeny.toString().split('\\n')\n        }\n\n        if(hasList(state.aclAllow)) {\n          config.spec.accessControlList.allow = state.aclAllow.toString().split('\\n')\n        }\n\n        config.metadata.userAgent = state.userAgent\n        config.spec.bindAddr = state.bindAddr\n        config.spec.externAddr = state.externAddr\n        config.spec.registrarIntf = state.registrarIntf\n        config.spec.recordRoute = state.recordRoute\n        config.spec.dataSource.provider = state.dsProvider\n        config.spec.dataSource.parameters = state.dsParameters\n        config.spec.restService.bindAddr = state.restBindAddr\n        config.spec.restService.keyStore= state.restKeyStorePath\n        config.spec.restService.trustStore = state.restTrustStorePath\n        config.spec.restService.keyStorePassword = state.restKeyStorePassword\n        config.spec.restService.trustStorePassword = state.restTrustStorePassword\n        config.spec.restService.unsecured = state.restUnsecured\n        config.spec.securityContext.keyStore= state.scKeyStorePath\n        config.spec.securityContext.trustStore = state.scTrustStorePath\n        config.spec.securityContext.keyStorePassword = state.scKeyStorePassword\n        config.spec.securityContext.trustStorePassword = state.scTrustStorePassword\n        config.spec.securityContext.debugging = state.scDebugging\n        config.spec.securityContext.client.authType = state.scClientAuthType\n        config.spec.securityContext.keyStoreType = state.scKeyStoreType\n\n        if (state.restPort) {\n          config.spec.restService.port = parseInt(state.restPort)\n        } else {\n          delete config.spec.restService.port\n        }\n\n        if (state.restMinThreads) {\n          config.spec.restService.minThreads = parseInt(state.restMinThreads)\n        } else {\n          delete config.spec.restService.minThreads\n        }\n\n        if (state.restMaxThreads) {\n          config.spec.restService.maxThreads = parseInt(state.restMaxThreads)\n        } else {\n          delete config.spec.restService.maxThreads\n        }\n\n        if (state.restTimeOutMillis) {\n          config.spec.restService.timeOutMillis = parseInt(state.restTimeOutMillis)\n        } else {\n          delete config.spec.restService.timeOutMillis\n        }\n\n        const tlsProtocols = []\n        if (state.scTLSv1) tlsProtocols.push('TLSv1')\n        if (state.scTLSv11) tlsProtocols.push('TLSv1.1')\n        if (state.scTLSv12) tlsProtocols.push('TLSv1.2')\n        if (state.scSSLv3) tlsProtocols.push('SSLv3')\n\n        config.spec.securityContext.client.protocols = tlsProtocols\n\n        const transport = []\n        const transportPorts = this.state.transportPorts\n\n        if (transportPorts.udp) transport.push({ protocol: 'udp', port: parseInt(transportPorts.udp)})\n        if (transportPorts.tcp) transport.push({ protocol: 'tcp', port: parseInt(transportPorts.tcp)})\n        if (transportPorts.tls) transport.push({ protocol: 'tls', port: parseInt(transportPorts.tls)})\n        if (transportPorts.ws) transport.push({ protocol: 'ws', port: parseInt(transportPorts.ws)})\n        if (transportPorts.wss) transport.push({ protocol: 'wss', port: parseInt(transportPorts.wss)})\n\n        config.spec.transport = transport\n\n        // save\n        this.props.apiStore.saveConfig(config)\n        this.setState({currentSection: 'home'})\n    }\n    handleOnCancel = () => this.setState({currentSection: 'home', updated: false})\n    isSection = name => this.state.currentSection === name\n    handleChangeSection = section => this.setState({currentSection: section, updated: false})\n    handleChange = e => {\n        const id = e.currentTarget.id\n        const value = e.target.value\n        const transportPorts = this.state.transportPorts\n        if (id === 'userAgent') this.setState({userAgent: value})\n        if (id === 'bindAddr') this.setState({bindAddr: value})\n        if (id === 'externAddr') this.setState({externAddr: value})\n        if (id === 'localnets') this.setState({localnets: value})\n        if (id === 'dsProvider') this.setState({dsProvider: value})\n        if (id === 'dsParameters') this.setState({dsParameters: value})\n        if (id === 'registrarIntf') this.setState({registrarIntf: value})\n        if (id === 'aclDeny') this.setState({aclDeny: value})\n        if (id === 'aclAllow') this.setState({aclAllow: value})\n        if (id === 'recordRoute') this.setState({recordRoute: e.target.checked})\n        if (id === 'udpPort') { transportPorts.udp = value; this.setState({transportPorts})}\n        if (id === 'tcpPort') { transportPorts.tcp = value; this.setState({transportPorts})}\n        if (id === 'tlsPort') { transportPorts.tls = value; this.setState({transportPorts})}\n        if (id === 'wsPort') { transportPorts.ws = value; this.setState({transportPorts})}\n        if (id === 'wssPort') { transportPorts.wss = value; this.setState({transportPorts})}\n        if (id === 'restBindAddr') this.setState({restBindAddr: value})\n        if (id === 'restPort') this.setState({restPort: value})\n        if (id === 'restMinThreads') this.setState({restMinThreads: value})\n        if (id === 'restMaxThreads') this.setState({restMaxThreads: value})\n        if (id === 'restTimeOutMillis') this.setState({restTimeOutMillis: value})\n        if (id === 'restKeyStorePath') this.setState({restKeyStorePath: value})\n        if (id === 'restTrustStorePath') this.setState({restTrustStorePath: value})\n        if (id === 'restKeyStorePassword') this.setState({restKeyStorePassword: value})\n        if (id === 'restTrustStorePassword') this.setState({restTrustStorePassword: value})\n        if (id === 'restUnsecured') this.setState({restUnsecured: e.target.checked})\n        if (id === 'scKeyStorePath') this.setState({scKeyStorePath: value})\n        if (id === 'scTrustStorePath') this.setState({scTrustStorePath: value})\n        if (id === 'scKeyStorePassword') this.setState({scKeyStorePassword: value})\n        if (id === 'scTrustStorePassword') this.setState({scTrustStorePassword: value})\n        if (id === 'scClientAuthType') this.setState({scClientAuthType: value})\n        if (id === 'scKeyStoreType') this.setState({scKeyStoreType: value})\n        if (id === 'scDebugging') this.setState({scDebugging: e.target.checked})\n        if (id === 'scTLSv1') this.setState({scTLSv1: e.target.checked})\n        if (id === 'scTLSv11') this.setState({scTLSv11: e.target.checked})\n        if (id === 'scTLSv12') this.setState({scTLSv12: e.target.checked})\n        if (id === 'scSSLv3') this.setState({scSSLv3: e.target.checked})\n    }\n\n    handleRestartServerNow = () => {\n      this.props.apiStore.changeStatus('restarting', true)\n    }\n\n    handleRestartServer = () => {\n      this.props.apiStore.changeStatus('restarting', false)\n    }\n\n    handleStopServerNow = () => {\n      this.props.apiStore.changeStatus('down', true)\n    }\n\n    handleStopServer = () => {\n      this.props.apiStore.changeStatus('down', false)\n    }\n\n    render(props) {\n      return (\n        <div>\n          <SettingsBreadcrumbs onChangeSection={this.handleChangeSection}\n            currentSection={this.state.currentSection}/>\n          {\n            this.isSection('general') &&\n            <General\n              config={this.state}\n              onChange={this.handleChange}\n              onSave={this.handleSave}\n              onCancel={this.handleOnCancel} />\n          }\n          {\n            this.isSection('nat') &&\n            <NAT\n              config={this.state}\n              onChange={this.handleChange}\n              onSave={this.handleSave}\n              onCancel={this.handleOnCancel} />\n          }\n          {\n            this.isSection('access_control_lists') &&\n            <AccessControlLists\n              config={this.state}\n              onChange={this.handleChange}\n              onSave={this.handleSave}\n              onCancel={this.handleOnCancel} />\n          }\n          {\n            this.isSection('networking_and_transport') &&\n            <NetworkingAndTransport\n              config={this.state}\n              onChange={this.handleChange}\n              onSave={this.handleSave}\n              onCancel={this.handleOnCancel} />\n          }\n          {\n            this.isSection('rest_service') &&\n            <RestService\n              config={this.state}\n              onChange={this.handleChange}\n              onSave={this.handleSave}\n              onCancel={this.handleOnCancel} />\n          }\n          {\n            this.isSection('certificates') &&\n            <Certificates\n              config={this.state}\n              onChange={this.handleChange}\n              onSave={this.handleSave}\n              onCancel={this.handleOnCancel} />\n          }\n          {\n            this.isSection('data_access') &&\n            <DataAccess\n              config={this.state}\n              onChange={this.handleChange}\n              onSave={this.handleSave}\n              onCancel={this.handleOnCancel} />\n          }\n          {\n            this.state.currentSection === 'home' &&\n            <Links onChangeSection={this.handleChangeSection} />\n          }\n          {\n            this.isSection('danger_zone') &&\n            <DangerZone\n              onRestartServerNow={this.handleRestartServerNow}\n              onStopServerNow={this.handleStopServerNow}\n              onRestartServer={this.handleRestartServer}\n              onStopServer={this.handleStopServer}\n              />\n          }\n        </div>\n      )\n    }\n}\n\nexport default inject('apiStore')(inject('appStore')(observer(Settings)))\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport LogsIcon from '@material-ui/icons/Assignment'\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow'\nimport PauseIcon from '@material-ui/icons/Pause'\nimport Button from '@material-ui/core/Button'\nimport { observer, inject } from 'mobx-react'\nimport { LazyLog, ScrollFollow } from 'react-lazylog'\nimport download from 'downloadjs'\n\nclass Logging extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sock: null,\n      open: true,\n      reConnect: false\n    }\n  }\n\n  render() {\n      return (\n        <div style={{ height: 'calc(100vh - 215px)', width: '100%' }}>\n          <div style={{\n            display: 'flex',\n            alignItems: 'center'\n          }}>\n            <LogsIcon color=\"primary\" size=\"small\" />\n            <Typography color=\"primary\" variant=\"h6\" id=\"tableTitle\">\n                Server's Logs\n            </Typography>\n          </div>\n\n          <div style={{ marginTop: 25, marginBottom: 15 }}>\n            <Button\n            style={{ marginRight: 5 }}\n            variant=\"contained\"\n            size=\"small\"\n            color=\"secondary\"\n            startIcon={this.state.open ? <PauseIcon /> : <PlayArrowIcon />}\n            onClick={() => {\n              if (this.state.open) {\n                this.state.sock && this.state.sock.close()\n              } else {\n                this.setState({reConnect: !this.state.reConnect})\n              }\n              this.setState({open: !this.state.open})\n            }}>Play live</Button>\n\n            <Button\n              onClick={async() =>\n              download(await this.props.apiStore.getSystemLogs(),\n                'routr.log', 'text/plain')}\n              variant=\"outlined\" size=\"small\">Download Logs</Button>\n          </div>\n\n          <ScrollFollow\n            key={this.state.reConnect}\n            startFollowing={true}\n            render={({ follow, onScroll }) => (\n              <LazyLog\n                enableSearch\n                url={this.props.apiStore.getSystemLogsURL()}\n                websocket\n                follow={follow}\n                onScroll={onScroll}\n                websocketOptions={{\n                  onOpen: (e, sock) => {\n                    this.setState({sock})\n                    this.state.sock.send(JSON.stringify({message: \"Open channel!\"}))\n                  },\n                  formatMessage: e => e,\n                }}\n              />\n            )}\n          />\n        </div>\n      );\n  }\n}\n\nexport default inject('apiStore')(observer(Logging))\n","import React from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { observer, inject } from 'mobx-react'\n\nclass NotificationBar extends React.Component {\n\n  handleClose = () => this.props.appStore.setNotificationOpen()\n\n  render() {\n    return (\n      <div>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={ this.props.appStore.isNotificationOpen() }\n          autoHideDuration={15000}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{this.props.appStore.notificationMsg}</span>}\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    )\n  }\n}\n\nexport default inject('appStore')(observer(NotificationBar))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport RefreshIcon from '@material-ui/icons/Refresh'\nimport { observer, inject } from 'mobx-react'\nimport { lighten } from '@material-ui/core/styles/colorManipulator'\nimport { toTitleCase } from '../common/utils'\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property)\n  }\n\n  render() {\n    const { order, orderBy, columnData } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columnData.map(column => {\n            return (\n              <TableCell\n                key={column.id}\n                sortDirection={orderBy === column.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={column.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === column.id}\n                    direction={order}\n                    onClick={this.createSortHandler(column.id)}\n                  >\n                    {column.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            )\n          }, this)}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  onRequestSort: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n}\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n})\n\nlet PaginationTableToolbar = props => {\n  const { classes, name, handleRefresh } = props\n\n  return (\n    <Toolbar>\n      <div className={classes.title}>\n        <Typography variant=\"h6\" id=\"tableTitle\">\n          {toTitleCase(name)}\n        </Typography>\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        <Tooltip title=\"Refresh\">\n          <IconButton aria-label=\"Refresh\" onClick={handleRefresh}>\n            <RefreshIcon />\n          </IconButton>\n        </Tooltip>\n      </div>\n    </Toolbar>\n  )\n}\n\nPaginationTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nPaginationTableToolbar = withStyles(toolbarStyles)(PaginationTableToolbar)\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  table: {\n    minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  }\n})\n\nclass EnhancedTable extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      data: props.data,\n      page: 0,\n      rowsPerPage: 5,\n    }\n  }\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property\n    let order = 'desc'\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc'\n    }\n\n    const data =\n      order === 'desc'\n        ? this.state.data.sort((a, b) => (b[orderBy] < a[orderBy] ? -1 : 1))\n        : this.state.data.sort((a, b) => (a[orderBy] < b[orderBy] ? -1 : 1))\n\n    this.setState({ data, order, orderBy })\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value })\n  }\n\n  render() {\n    const { classes, columnData, data, name, apiStore } = this.props\n    const { order, orderBy, rowsPerPage, page } = this.state\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage)\n\n    return (\n      <Paper className={classes.root}>\n        <PaginationTableToolbar name={ name } handleRefresh={\n          e => apiStore.loadResources(this.props.appStore.getCurrentSection())\n        }/>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              columnData={ columnData }\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n            />\n            <TableBody>\n              {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(n => {\n                return (\n                  <TableRow\n                    hover\n                    tabIndex={-1}\n                    key={n.c1}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      {n.c1}\n                    </TableCell>\n                    <TableCell>{n.c2}</TableCell>\n                    { n.c3 && <TableCell>{n.c3}</TableCell> }\n                    { n.c4 && <TableCell>{n.c4}</TableCell>  }\n                  </TableRow>\n                )\n              })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    )\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default inject('apiStore')(inject('appStore')(withStyles(styles)(observer(EnhancedTable))))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport Dialog from '@material-ui/core/Dialog'\nimport CardContent from '@material-ui/core/CardContent'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport CloseIcon from '@material-ui/icons/Close'\nimport MuiDialogTitle from '@material-ui/core/DialogTitle'\nimport MuiDialogContent from '@material-ui/core/DialogContent'\nimport { observer, inject } from 'mobx-react'\n\nconst styles = {\n  appBar: {\n    position: 'relative',\n  },\n  flex: {\n    flex: 1,\n  },\n}\n\nconst DialogTitle = withStyles(theme => ({\n  root: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n}))(props => {\n  const { children, classes, onClose } = props\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  )\n})\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: 0\n  },\n}))(MuiDialogContent)\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div>\n        <Dialog\n          aria-labelledby=\"customized-dialog-title\"\n          onClose={ this.props.appStore.setAboutDialogOpen }\n          open={ this.props.appStore.isAboutDialogOpen() }\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={ this.props.appStore.setAboutDialogOpen }>\n            About\n          </DialogTitle>\n          <DialogContent>\n          <CardContent>\n            <Typography color=\"textSecondary\">\n              v1.0\n            </Typography>\n            <Typography component=\"p\">\n              Routr is a lightweight sip proxy, location server, and registrar that provides a reliable and scalable SIP infrastructure for telephony carriers, communication service providers, and integrators.\n              This is the version \"1.0\" of Routr console. <br />\n              {'\"Next-generation SIP Server\"'}\n            </Typography>\n          </CardContent>\n          </DialogContent>\n        </Dialog>\n      </div>\n    )\n  }\n}\n\nAbout.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\nexport default inject('apiStore')(inject('appStore')(withStyles(styles)(observer(About))))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Drawer from '@material-ui/core/Drawer'\nimport AppBar from '@material-ui/core/AppBar'\nimport MainNav from './MainNav'\nimport MenuNav from './MenuNav'\nimport Resources from './components/resources/Resources.js'\nimport Settings from './components/settings/Settings.js'\nimport Logs from './components/logs/Logs.js'\nimport NotificationBar from './components/common/NotificationBar'\nimport PaginationTable from './components/common/PaginationTable'\nimport About from './components/common/About'\nimport { observer, inject } from 'mobx-react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { toTitleCase } from './components/common/utils'\nimport { getColumnData } from './components/common/dataStruct'\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n    zIndex: 1,\n    overflow: 'hidden',\n    position: 'relative',\n    display: 'flex',\n    height: '100vh'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    width: 240,\n  },\n  content: {\n    overflow: 'scroll',\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n    minWidth: 0, // So the Typography noWrap works\n  },\n  toolbar: theme.mixins.toolbar,\n})\n\nclass ClippedDrawer extends React.Component {\n  render () {\n    const { classes, appStore, apiStore} = this.props\n    const getTitle = () => toTitleCase(appStore.getCurrentSection())\n    const columnData = getColumnData(appStore.getCurrentSection())\n    const data = apiStore.getResources()\n\n    return(\n      <div className={classes.root}>\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <MainNav />\n        </AppBar>\n        <Drawer variant=\"permanent\" classes={{ paper: classes.drawerPaper }}>\n          <div className={classes.toolbar} />\n          <MenuNav />\n        </Drawer>\n        <main className={classes.content}\n          style={{backgroundColor: appStore.getCurrentSection() === 'settings' ? '#fff' : ''}}>\n          <div className={classes.toolbar}/>\n          {\n            appStore.isResourceSection() && <Resources/>\n          }\n          {\n            appStore.isLocOrRegSection() &&\n            <PaginationTable\n                name={ getTitle() }\n                columnData= { columnData }\n                data={ data }\n            />\n          }\n          {\n            appStore.isLogsSection() && <Logs/>\n          }\n          {\n            appStore.isSettingsSection() && <Settings/>\n          }\n          <NotificationBar />\n          <About />\n        </main>\n      </div>\n    )\n  }\n}\n\nClippedDrawer.propTypes = {\n    classes: PropTypes.object.isRequired,\n}\n\nexport default inject('apiStore')(inject('appStore')(withStyles(styles)(observer(ClippedDrawer))))\n","import React, { Component } from 'react'\nimport './App.css'\nimport '../node_modules/dropzone/dist/min/dropzone.min.css'\nimport ClippedDrawer from './ClippedDrawer'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\nimport { getParameterByName } from './components/common/utils'\nimport { observer, inject } from 'mobx-react'\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n      primary: {\n        light: '#757ce8',\n        main: '#33383d',\n        dark: '#002884',\n        contrastText: '#fff',\n      },\n      secondary: {\n        main: '#3F51B5',\n      },\n    },\n})\n\nclass App extends Component {\n\n  componentDidMount() {\n      // This is only working on dev mode :(\n      if(getParameterByName('token')) {\n          this.props.apiStore.setToken(getParameterByName('token'))\n      }\n      // This variable name is misleading. Consider refactoring.\n      if(getParameterByName('apiURL')) {\n          this.props.apiStore.setApiURL(getParameterByName('apiURL'))\n      }\n      if(getParameterByName('apiHost')) {\n          this.props.apiStore.setApiHost(getParameterByName('apiHost'))\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <MuiThemeProvider theme={theme}>\n              <ClippedDrawer />\n          </MuiThemeProvider>\n      </div>\n    )\n  }\n}\n\nexport default inject('apiStore')(observer(App))\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { decorate, observable } from 'mobx'\n\nclass AppStore {\n  currentResource = {}\n  resourceEditorOpen = false\n  aboutDialogOpen = false\n  fileUploaderOpen = false\n  notificationOpen = false\n  notificationMsg = ''\n  currentSection = 'domains'\n\n  notify = (msg, time) => {\n      this.notificationMsg = msg\n      this.setNotificationOpen()\n  }\n\n  setNotificationOpen = () => this.notificationOpen = !this.notificationOpen\n  setCurrentResource = resource => this.currentResource = resource\n  setResourceEditorOpen = () => this.resourceEditorOpen = !this.resourceEditorOpen\n  setAboutDialogOpen = () => this.aboutDialogOpen = !this.aboutDialogOpen\n  setFileUploaderOpen = () => this.fileUploaderOpen = !this.fileUploaderOpen\n  setCurrentSection = section => this.currentSection = section\n\n  getCurrentSection = () => this.currentSection\n  getCurrentResource = () => this.currentResource\n\n  isResourceSection = () => this.currentSection === 'domains'  ||\n    this.currentSection === 'agents'   ||\n    this.currentSection === 'peers'    ||\n    this.currentSection === 'gateways' ||\n    this.currentSection === 'numbers'\n\n  isLocOrRegSection = () => this.currentSection === 'location'\n    || this.currentSection === 'registration'\n\n  isSettingsSection = () => this.currentSection === 'settings'\n  isLogsSection = () => this.currentSection === 'logs'\n  isAboutDialogOpen = () => this.aboutDialogOpen\n  isResourceEditorOpen = () => this.resourceEditorOpen\n  isFileUploaderOpen = () => this.fileUploaderOpen\n  isNotificationOpen = () => this.notificationOpen\n}\n\ndecorate(AppStore, {\n    currentResource: observable,\n    currentSection: observable,\n    resourceEditorOpen: observable,\n    aboutDialogOpen: observable,\n    fileUploaderOpen: observable,\n    notificationMsg: observable,\n    notificationOpen: observable\n})\n\nexport const appStore = new AppStore()\n","import { decorate, observable, when } from 'mobx'\nimport { getEndpoint } from '../components/common/utils'\nimport { createData} from '../components/common/dataStruct'\nimport { appStore } from './app'\n\nclass APIStore {\n    resources = []\n    // This can only happen in 'dev' environment\n    apiURL = '/api/v1beta1'\n    apiHost = 'localhost'\n    config = {\n      spec: {\n        restService: {},\n        securityContext: {}\n      }\n    }\n    token = ''\n\n    constructor() {\n       when(\n           // In production this token is passed by the proxy\n           () => this.token !== '' || process.env.NODE_ENV === 'production',\n           async() => {\n               this.loadConfig()\n               // TODO:  This avoid a stream collission with the loadConfig fuction\n               // but it feels like a hack. Please take another look at it!\n               await setTimeout(()=> {}, 1500)\n               if (appStore.getCurrentSection() !== 'settings') {\n                  this.loadResources(appStore.getCurrentSection())\n               }\n           }\n       )\n    }\n\n    update = resource => {\n        if (this.doesNotSupportWOOps()) {\n            appStore.notify('Operation not supported by data source provider.')\n            return\n        }\n        let rObj\n        try {\n            rObj = JSON.parse(resource)\n        } catch(e) {\n            appStore.notify('Malformed document.')\n            return\n        }\n        const t = appStore.getCurrentSection()\n        const endpoint = getEndpoint(this.apiURL,\n          t + '/' + rObj.metadata.ref, '', this.token)\n        fetch(endpoint, {\n            method: 'PUT',\n            body: resource\n        })\n        .then(results => {\n            return results.json()\n        })\n        .then(response => {\n            if (response.status === 200) {\n                appStore.notify('Updated resource.')\n            } else if(response.status === 422 && response.data) {\n                appStore.notify(response.message + ': ' +  response.data)\n            } else {\n                appStore.notify(response.message)\n            }\n            this.loadResources(appStore.getCurrentSection())\n        })\n    }\n\n    delete = async(type, refs) => {\n        if (this.doesNotSupportWOOps()) {\n            appStore.notify('Operation not supported by data source provider.')\n            return\n        }\n        const ep = ref => getEndpoint(this.apiURL, type + '/'+ ref, '', this.token)\n        let error = []\n        for (let i =0; i < refs.length; i++) {\n            const stream = await fetch(ep(refs[i]), { method: 'DELETE'})\n            const response = await stream.json()\n            if (response.status === 405 || response.status === 409) {\n                appStore.notify(response.message)\n                return\n            } else if (response.status !== 200) {\n                error.push(response.message)\n            }\n        }\n        this.loadResources(appStore.getCurrentSection())\n        if (error.length > 0) {\n            appStore.notify('An error occurred while deleting the resources.')\n        } else {\n            appStore.notify(`${refs.length} ${appStore.getCurrentSection()} removed.`)\n        }\n    }\n\n    loadResources = async(type) => {\n        const t = type === 'registration' ? 'registry' : type\n        const endpoint = getEndpoint(this.apiURL, t, '*', this.token)\n        const stream = await fetch(endpoint)\n        const response = await stream.json()\n\n        if (response.status === 200) {\n            const data = []\n            if (response && response.data) {\n              response.data.forEach(item => {\n                  data.push(createData(item, type))\n              })\n            }\n            this.resources = data\n        } else {\n            appStore.notify(response.message)\n        }\n    }\n\n    getResources = () => this.resources\n\n    getAPIUrl = () => this.apiURL\n\n    setApiURL = url => this.apiURL = url\n\n    setApiHost = host => this.apiHost = host\n\n    getToken = () => this.token\n\n    setToken = token => this.token = token\n\n    saveConfig = config => {\n        if (this.doesNotSupportWOOps()) {\n            appStore.notify('Operation not supported by data source provider.')\n            return\n        }\n        const t = 'system/config'\n        const endpoint = getEndpoint(this.apiURL, t , '', this.token)\n        fetch(endpoint, {\n            method: 'PUT',\n            body: JSON.stringify(config)\n        })\n        .then(results => {\n            return results.json()\n        })\n        .then(response => {\n            if (response.status === 200) {\n                appStore.notify('Updated settings. This changes will take effect on the next restart')\n            } else {\n                let message = response.message\n                if (response.data) {\n                    message += ': ' + response.data\n                }\n                appStore.notify(message)\n            }\n        })\n    }\n\n    changeStatus = (status, now) => {\n        const t = `system/status/${status}`\n        const endpoint = getEndpoint(this.apiURL, t , `now=${now}`, this.token)\n        fetch(endpoint, {\n            method: 'POST'\n        })\n        .then(results => {\n            return results.json()\n        })\n        .then(response => {\n            if (response.status === 200) {\n                appStore.notify('Restarting.')\n            } else {\n                let message = response.message\n                if (response.data) {\n                    message += ': ' + response.data\n                }\n                appStore.notify(message)\n            }\n        })\n    }\n\n    loadConfig = async() => {\n        const t = 'system/config'\n        const endpoint = getEndpoint(this.apiURL, t, '*', this.token)\n        const stream = await fetch(endpoint)\n        const response = await stream.json()\n\n        if (response.status === 200) {\n            this.config = response.data\n        } else {\n            appStore.notify(response.message)\n        }\n    }\n\n    getConfig = () => this.config\n\n    doesNotSupportWOOps = () => this.config.spec.dataSource.provider === 'files_data_provider'\n\n    getSystemLogs = async() => {\n        const t = 'system/logs'\n        const endpoint = getEndpoint(this.apiURL, t , '', this.token)\n        const stream = await fetch(endpoint, { method: 'GET' })\n        const response = await stream.json()\n\n        if (response.status === 200) {\n            return response.data\n        } else {\n            appStore.notify(response.message)\n        }\n    }\n\n    getSystemLogsURL = () => {\n      const host = this.apiHost\n      const port = this.config.restService\n        && this.config.restService.port? this.config.restService.port : 4567\n      return `wss://${host}:${port}${getEndpoint(this.apiURL, 'system/logs-ws' , '', this.token)}`\n    }\n}\n\ndecorate(APIStore, {\n    resources: observable,\n    token: observable,\n    config: observable\n})\n\nexport const apiStore = new APIStore()\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from \"mobx-react\"\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport { appStore } from './stores/app'\nimport { apiStore } from './stores/api'\n\nconst stores = {\n  appStore,\n  apiStore\n}\n\nReactDOM.render(\n  <Provider {...stores}>\n    <App />\n  </Provider>\n  , document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}